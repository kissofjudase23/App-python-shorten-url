

version: '3.7'

networks:
  py-shorten-url:
    name: py-shorten-url
    driver: bridge

volumes:
  mysql-volume:


services:
  py-shorten-url:
    build:
      context: ../
      dockerfile: ./build/dockerfile
    image: py-shorten-url:dev
    container_name: py-shorten-url
    # for dev
    # volumes:
    #   - type: bind
    #     source: ../
    #     target: /app/
    working_dir: /app
    restart: "always"
    ports:
    - target: 8080
      published: 8080
      protocol: tcp
    environment:
        APP_HOST: ${APP_HOST}
        APP_PORT: ${APP_PORT}
        APP_ENABLE_SWAGGER: ${APP_ENABLE_SWAGGER}
        CACHE_TYPE: ${CACHE_TYPE}
        CACHE_HOST: ${CACHE_HOST}
        CACHE_PORT: ${CACHE_PORT}
        CACHE_MAX_CONNECTIONS: ${CACHE_MAX_CONNECTIONS}
        DB_TYPE: ${DB_TYPE}
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        DB_MAX_CONNECTIONS: ${DB_MAX_CONNECTIONS}
        DB_DATABASE: ${DB_DATABASE}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - py-shorten-url
    tty: true
    logging:
      driver: json-file

  mysql:
    image: mysql:8
    container_name: py-shorten-url-mysql
    ports:
    - target: 3306
      published: ${DB_PORT}
      protocol: tcp
    tty: true
    environment:
        MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_USER: ${DB_USER}
        MYSQL_PASSWORD: ${DB_PASSWORD}
    restart: "always"
    volumes:
      - mysql-volume:/var/lib/mysql
    networks:
      - py-shorten-url

  redis:
      image: redis:6
      container_name: py-shorten-url-redis
      ports:
      - target: ${CACHE_PORT}
        published: ${CACHE_PORT}
        protocol: tcp
      tty: true
      restart: "always"
      networks:
        - py-shorten-url
